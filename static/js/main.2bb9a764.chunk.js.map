{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Routes/Home.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","history","useHistory","useForm","register","handleSubmit","variants","animate","initial","whileHover","xmlns","width","height","viewBox","path","d","to","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getMovies","fetch","then","response","json","getTvs","getTopRatedTv","makeImagePath","id","format","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","p","Slider","Row","Box","Info","black","Overlay","BigMovie","BigCover","BigTitle","h3","BigOverview","DetailRow","Description","Genres","Genre","veryDark","Release","Homepage","Rate","rowVariants","hidden","window","outerWidth","visible","exit","boxVariants","scale","hover","y","delay","duaration","infoVariants","opacity","Home","bigMovieMatch","useQuery","isLoading","movieId","Number","params","DetailData","refetch","index","setIndex","leaving","setLeaving","toggleLeaving","undefined","totalMovies","results","length","maxIndex","Math","floor","backdrop_path","title","overview","AnimatePresence","onExitComplete","duration","slice","map","movie","success","style","backgroundImage","original_title","className","runtime","genres","genre","idx","name","release_date","vote_average","vote_count","href","homepage","Category","Result","Image","bgImg","Each","location","useLocation","URLSearchParams","search","searchMovies","MovieData","MovieLoading","refetchMovie","searchTvs","TvData","TvLoading","refetchTv","toMovieDetail","toTvDetail","tvId","toggle","setToggle","toggleTv","setToggleTv","poster_path","Tv","SecondSlider","Right","SeasonAndEpisode","bigTvMatch","TopRatedData","console","log","indexforTopRated","setIndexforTopRated","onBoxClicked","find","tv","original_name","episode_run_time","number_of_seasons","number_of_episodes","last_air_date","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bb9a764.chunk.js","sourcesContent":["import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  font-size: 14px;\n  padding: 20px 60px;\n  color: white;\n  z-index: 20;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 95px;\n  height: 25px;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 6px;\n    stroke: white;\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n`;\n\nconst Search = styled.form`\n  color: white;\n  display: flex;\n  align-items: center;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 5px;\n  height: 5px;\n  border-radius: 2.5px;\n  bottom: -5px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.red};\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 10px;\n  z-index: -1;\n  color: white;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [0, 1, 0],\n    transition: {\n      repeat: Infinity,\n    },\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nfunction Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useRouteMatch(\"/\");\n  const tvMatch = useRouteMatch(\"/tv\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({ scaleX: 1 });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navAnimation]);\n  const history = useHistory();\n  const { register, handleSubmit } = useForm<IForm>();\n  const onValid = (data: IForm) => {\n    history.push(`/search?keyword=${data.keyword}`);\n  };\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n      <Col>\n        <Logo\n          variants={logoVariants}\n          whileHover=\"active\"\n          animate=\"normal\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1024\"\n          height=\"276.742\"\n          viewBox=\"0 0 1024 276.742\"\n        >\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n        </Logo>\n        <Items>\n          <Item>\n            <Link to=\"/\">\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/tv\">\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -220 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", { required: true, minLength: 2 })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"Search for movie or tv show...\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n}\n\nexport default Header;\n","// const API_KEY = \"10923b261ba94d897ac6b81148314a3f\";\nconst API_KEY = \"42fa8571efa4eec04c0b8028ca5f95c5\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\ninterface IMovie {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n}\n\ninterface ITv {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  name: string;\n  overview: string;\n}\nexport interface IGetMoviesResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\ninterface IGenre {\n  id: number;\n  name: string;\n}\nexport interface IGetMovieDetail {\n  success: boolean;\n  genres: IGenre[];\n  homepage: string;\n  vote_average: number;\n  vote_count: number;\n  release_date: string;\n  runtime: number;\n  backdrop_path: string;\n  original_title: string;\n  overview: string;\n}\ninterface Iruntime {}\nexport interface IGetTvDetail {\n  success: boolean;\n  genres: IGenre[];\n  homepage: string;\n  vote_average: number;\n  vote_count: number;\n  number_of_episodes: number;\n  number_of_seasons: number;\n  last_air_date: string;\n  first_air_date: string;\n  episode_run_time: Iruntime[];\n  backdrop_path: string;\n  original_name: string;\n  overview: string;\n}\n\nexport interface IGetTvsResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: ITv[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport function getMovies() {\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTvs() {\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then((response) =>\n    response.json()\n  );\n}\nexport function getTopRatedTv() {\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function searchMovies(keyword: string) {\n  return fetch(\n    `${BASE_PATH}/search/movie?api_key=${API_KEY}&query=${keyword}`\n  ).then((response) => response.json());\n}\nexport function searchTvs(keyword: string) {\n  return fetch(\n    `${BASE_PATH}/search/tv?api_key=${API_KEY}&query=${keyword}`\n  ).then((response) => response.json());\n}\n\nexport function getMovieDetail(movieId: number) {\n  return fetch(`${BASE_PATH}/movie/${movieId}?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTvDetail(tvId: number) {\n  return fetch(`${BASE_PATH}/tv/${tvId}?api_key=${API_KEY}`).then((response) =>\n    response.json()\n  );\n}\n","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport {\n  getMovieDetail,\n  getMovies,\n  IGetMovieDetail,\n  IGetMoviesResult,\n} from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -100px;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  .runtime {\n    font-size: 20px;\n    margin-bottom: 10px;\n  }\n`;\n\nconst BigOverview = styled.p`\n  .runtime {\n    margin-left: 5px;\n  }\n`;\n\nconst DetailRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 20px 0;\n`;\nconst Description = styled.div`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst Genres = styled.div`\n  padding: 20px 0;\n  display: flex;\n  align-items: center;\n  span {\n    font-size: 20px;\n  }\n`;\nconst Genre = styled.div`\n  background-color: ${(props) => props.theme.black.veryDark};\n  color: ${(props) => props.theme.white.darker};\n  margin: 0 5px;\n  padding: 10px;\n  border-radius: 5px;\n`;\n\nconst Release = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  span {\n    &:last-child {\n      font-size: 25px;\n    }\n    &:first-child {\n      font-size: 15px;\n      color: ${(props) => props.theme.white.darker};\n      text-align: right;\n    }\n  }\n`;\n\nconst Homepage = styled.div`\n  a {\n    &:hover {\n      border-bottom: 1px solid ${(props) => props.theme.white.darker};\n    }\n  }\n`;\n\nconst Rate = styled.div``;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Home() {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n  const { scrollY } = useViewportScroll();\n  const { data, isLoading } = useQuery<IGetMoviesResult>(\n    [\"movies\", \"nowPlaying\"],\n    getMovies\n  );\n  const {\n    data: DetailData,\n    isLoading: DeatilLoading,\n    refetch,\n  } = useQuery<IGetMovieDetail>([\"movie\", \"detail\"], () =>\n    getMovieDetail(Number(bigMovieMatch?.params.movieId))\n  );\n\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const incraseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = data.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/movies/${movieId}`);\n  };\n  const onOverlayClick = () => history.push(\"/\");\n\n  useEffect(() => {\n    if (bigMovieMatch?.params.movieId !== undefined) {\n      refetch();\n    }\n  }, [bigMovieMatch?.params.movieId]);\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            onClick={incraseIndex}\n            bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{data?.results[0].title}</Title>\n            <Overview>{data?.results[0].overview}</Overview>\n          </Banner>\n          <Slider>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {data?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          {DetailData?.success === false ? (\n            <h1>Loading...</h1>\n          ) : (\n            <AnimatePresence>\n              {bigMovieMatch ? (\n                <>\n                  <Overlay\n                    onClick={onOverlayClick}\n                    exit={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                  />\n                  <BigMovie\n                    style={{ top: scrollY.get() + 100 }}\n                    layoutId={bigMovieMatch.params.movieId}\n                  >\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            DetailData?.backdrop_path + \"\",\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n\n                      <BigTitle>{DetailData?.original_title} </BigTitle>\n                      <Description>\n                        <BigOverview>\n                          {DetailData?.overview}\n                          <span className=\"runtime\">\n                            ( {DetailData?.runtime}m )\n                          </span>\n                        </BigOverview>\n                        <DetailRow>\n                          <Genres>\n                            <span>Genre :</span>\n                            {DetailData?.genres?.map((genre, idx) => {\n                              if (idx < 4) {\n                                return <Genre>{genre.name}</Genre>;\n                              }\n                            })}\n                          </Genres>\n\n                          <Release>\n                            <span>Released</span>\n                            <span>{DetailData?.release_date}</span>\n                          </Release>\n                        </DetailRow>\n                        <DetailRow>\n                          <Rate>\n                            Rate : {DetailData?.vote_average} / 10 ({\" \"}\n                            {DetailData?.vote_count} ){\" \"}\n                          </Rate>\n                          <Homepage>\n                            <a href={DetailData?.homepage}>\n                              {DetailData?.homepage}\n                            </a>\n                          </Homepage>\n                        </DetailRow>\n                      </Description>\n                    </>\n                  </BigMovie>\n                </>\n              ) : null}\n            </AnimatePresence>\n          )}\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Home;\n","// import { useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  IGetMoviesResult,\n  IGetTvsResult,\n  searchMovies,\n  searchTvs,\n} from \"../api\";\nimport { makeImagePath } from \"../utils\";\nconst Wrapper = styled.div`\n  margin-top: 20px;\n  padding: 60px;\n`;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Category = styled.h2`\n  font-size: 50px;\n  color: ${(props) => props.theme.white.lighter};\n  margin-bottom: 20px;\n`;\nconst Result = styled(motion.div)`\n  border-top: 2px solid ${(props) => props.theme.black.lighter};\n  padding: 20px 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 250px);\n  grid-auto-rows: 350px;\n`;\nconst Title = styled.div`\n  position: absolute;\n  height: 30px;\n  bottom: 50px;\n`;\nconst Image = styled.div<{ bgImg: string }>`\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgImg});\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n`;\nconst Each = styled(motion.div)`\n  position: relative;\n`;\nfunction Search() {\n  const location = useLocation();\n  let keyword = new URLSearchParams(location.search).get(\"keyword\");\n  const history = useHistory();\n  const {\n    data: MovieData,\n    isLoading: MovieLoading,\n    refetch: refetchMovie,\n  } = useQuery<IGetMoviesResult>([\"movie\", \"movieresult\"], () =>\n    searchMovies(keyword + \"\")\n  );\n  const {\n    data: TvData,\n    isLoading: TvLoading,\n    refetch: refetchTv,\n  } = useQuery<IGetTvsResult>([\"tv\", \"tvresult\"], () =>\n    searchTvs(keyword + \"\")\n  );\n  useEffect(() => {\n    refetchMovie();\n    refetchTv();\n  }, [keyword]);\n  const toMovieDetail = (movieId: number) => {\n    history.push(`/movies/${movieId}`);\n  };\n  const toTvDetail = (tvId: number) => {\n    history.push(`/tv/${tvId}`);\n  };\n  const [toggle, setToggle] = useState(false);\n  const [toggleTv, setToggleTv] = useState(false);\n  return (\n    <Wrapper>\n      {MovieLoading && TvLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Category>\n            Movie Result ( {MovieData?.results.length} )\n            <span className=\"toggle\" onClick={() => setToggle((prev) => !prev)}>\n              {toggle ? \"-\" : \"+\"}\n            </span>\n          </Category>\n          {toggle ? (\n            <Result>\n              {MovieData?.results.map((movie) => {\n                return (\n                  <Each\n                    onClick={() => toMovieDetail(movie.id)}\n                    initial={{ scale: 1 }}\n                    whileHover={{ scale: 1.2 }}\n                    key={movie.id}\n                  >\n                    <Image\n                      bgImg={\n                        movie.poster_path\n                          ? makeImagePath(movie.poster_path, \"w200\")\n                          : \"https://3.bp.blogspot.com/-WhBe10rJzG4/U4W-hvWvRCI/AAAAAAAABxg/RyWcixpgr3k/s1600/noimg.jpg\"\n                      }\n                    />\n                    <Title>{movie.title}</Title>\n                  </Each>\n                );\n              })}\n            </Result>\n          ) : (\n            <Result>\n              {MovieData?.results.slice(0, 5).map((movie) => {\n                return (\n                  <Each\n                    onClick={() => toMovieDetail(movie.id)}\n                    initial={{ scale: 1 }}\n                    whileHover={{ scale: 1.2 }}\n                    key={movie.id}\n                  >\n                    <Image\n                      bgImg={\n                        movie.poster_path\n                          ? makeImagePath(movie.poster_path, \"w200\")\n                          : \"https://3.bp.blogspot.com/-WhBe10rJzG4/U4W-hvWvRCI/AAAAAAAABxg/RyWcixpgr3k/s1600/noimg.jpg\"\n                      }\n                    />\n                    <Title>{movie.title}</Title>\n                  </Each>\n                );\n              })}\n            </Result>\n          )}\n          <Category>\n            Tv Result ( {TvData?.results.length} ){\" \"}\n            <span\n              className=\"toggle\"\n              onClick={() => setToggleTv((prev) => !prev)}\n            >\n              {toggleTv ? \"-\" : \"+\"}\n            </span>\n          </Category>\n          {toggleTv ? (\n            <Result>\n              {TvData?.results.map((Tv) => {\n                return (\n                  <Each\n                    onClick={() => toTvDetail(Tv.id)}\n                    initial={{ scale: 1 }}\n                    whileHover={{ scale: 1.2 }}\n                    key={Tv.id}\n                  >\n                    <Image\n                      bgImg={\n                        Tv.poster_path\n                          ? makeImagePath(Tv.poster_path, \"w200\")\n                          : \"https://3.bp.blogspot.com/-WhBe10rJzG4/U4W-hvWvRCI/AAAAAAAABxg/RyWcixpgr3k/s1600/noimg.jpg\"\n                      }\n                    />\n                    <Title>{Tv.name}</Title>\n                  </Each>\n                );\n              })}\n            </Result>\n          ) : (\n            <Result>\n              {TvData?.results.slice(0, 5).map((Tv) => {\n                return (\n                  <Each\n                    onClick={() => toTvDetail(Tv.id)}\n                    initial={{ scale: 1 }}\n                    whileHover={{ scale: 1.2 }}\n                    key={Tv.id}\n                  >\n                    <Image\n                      bgImg={\n                        Tv.poster_path\n                          ? makeImagePath(Tv.poster_path, \"w200\")\n                          : \"https://3.bp.blogspot.com/-WhBe10rJzG4/U4W-hvWvRCI/AAAAAAAABxg/RyWcixpgr3k/s1600/noimg.jpg\"\n                      }\n                    />\n                    <Title>{Tv.name}</Title>\n                  </Each>\n                );\n              })}\n            </Result>\n          )}\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Search;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport {\n  getMovies,\n  getTopRatedTv,\n  getTvDetail,\n  getTvs,\n  IGetMoviesResult,\n  IGetTvDetail,\n  IGetTvsResult,\n} from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n  .category {\n    font-size: 50px;\n    padding-left: 10px;\n    color: ${(props) => props.theme.red};\n    font-weight: bolder;\n    text-shadow: 1.5px -1px 1px ${(props) => props.theme.white.lighter};\n  }\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -230px;\n`;\nconst SecondSlider = styled.div`\n  position: relative;\n  top: 50px;\n`;\n\nconst Left = styled.div`\n  z-index: 10;\n  background-color: gray;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\nconst Right = styled.div`\n  position: absolute;\n  right: 0px;\n  z-index: 10;\n  background-color: rgba(41, 40, 40, 0.712);\n  width: 30px;\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  span {\n    background-color: gray;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst BigOverview = styled.p`\n  .runtime {\n    margin-left: 5px;\n  }\n`;\nconst SeasonAndEpisode = styled.div``;\n\nconst DetailRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 20px 0;\n`;\nconst Description = styled.div`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst Genres = styled.div`\n  padding: 20px 0;\n  display: flex;\n  align-items: center;\n  span {\n    font-size: 20px;\n  }\n`;\nconst Genre = styled.div`\n  background-color: ${(props) => props.theme.black.veryDark};\n  color: ${(props) => props.theme.white.darker};\n  margin: 0 5px;\n  padding: 10px;\n  border-radius: 5px;\n`;\n\nconst Release = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  span {\n    &:last-child {\n      font-size: 25px;\n    }\n    &:first-child {\n      font-size: 15px;\n      color: ${(props) => props.theme.white.darker};\n      text-align: right;\n    }\n  }\n`;\n\nconst Homepage = styled.div`\n  a {\n    &:hover {\n      border-bottom: 1px solid ${(props) => props.theme.white.darker};\n    }\n  }\n`;\n\nconst Rate = styled.div``;\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Home() {\n  const history = useHistory();\n  const bigTvMatch = useRouteMatch<{ tvId: string }>(\"/tv/:tvId\");\n  const { scrollY } = useViewportScroll();\n  const { data, isLoading } = useQuery<IGetTvsResult>(\n    [\"tv\", \"popular\"],\n    getTvs\n  );\n  const { data: TopRatedData, isLoading: TopRatedLoading } =\n    useQuery<IGetTvsResult>([\"tv\", \"topRated\"], getTopRatedTv);\n  const {\n    data: DetailData,\n    isLoading: DeatilLoading,\n    refetch,\n  } = useQuery<IGetTvDetail>([\"tv\", \"detail\"], () =>\n    getTvDetail(Number(bigTvMatch?.params.tvId))\n  );\n  console.log(DetailData);\n  const [index, setIndex] = useState(0);\n  const [indexforTopRated, setIndexforTopRated] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const incraseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = data.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const incraseIndexforTopRated = () => {\n    if (TopRatedData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = TopRatedData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndexforTopRated((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number) => {\n    history.push(`/tv/${tvId}`);\n  };\n  const onOverlayClick = () => history.push(\"/tv\");\n  const clickedTv =\n    bigTvMatch?.params.tvId &&\n    (data?.results.find((tv) => tv.id === +bigTvMatch.params.tvId) ||\n      TopRatedData?.results.find((tv) => tv.id === +bigTvMatch.params.tvId));\n  useEffect(() => {\n    if (bigTvMatch?.params.tvId !== undefined) {\n      refetch();\n    }\n  }, [bigTvMatch?.params.tvId]);\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>\n            <Title>{data?.results[0].name}</Title>\n            <Overview>{data?.results[0].overview}</Overview>\n          </Banner>\n          <Slider>\n            <h1 className=\"category\">Popular</h1>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {data?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Right onClick={incraseIndex}>\n              <span>{`>`}</span>\n            </Right>\n          </Slider>\n          <SecondSlider>\n            <h1 className=\"category\">Top Rated</h1>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={indexforTopRated}\n              >\n                {TopRatedData?.results\n                  .slice(1)\n                  .slice(\n                    offset * indexforTopRated,\n                    offset * indexforTopRated + offset\n                  )\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Right onClick={incraseIndexforTopRated}>\n              <span>{`>`}</span>\n            </Right>\n          </SecondSlider>\n          {DetailData?.success === false ? null : (\n            <AnimatePresence>\n              {bigTvMatch ? (\n                <>\n                  <Overlay\n                    onClick={onOverlayClick}\n                    exit={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                  />\n                  <BigMovie\n                    style={{ top: scrollY.get() + 100 }}\n                    layoutId={bigTvMatch.params.tvId}\n                  >\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            DetailData?.backdrop_path + \"\",\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{DetailData?.original_name}</BigTitle>\n                      <Description>\n                        <BigOverview>\n                          {DetailData?.overview === \"\"\n                            ? \"No Overview exists\"\n                            : DetailData?.overview}\n                          {DetailData?.episode_run_time.length === 0 ? null : (\n                            <span className=\"runtime\">\n                              ( {DetailData?.episode_run_time[0]}m )\n                            </span>\n                          )}\n                        </BigOverview>\n                        <SeasonAndEpisode>\n                          <span>{DetailData?.number_of_seasons} Season / </span>\n                          <span>{DetailData?.number_of_episodes} Episode</span>\n                        </SeasonAndEpisode>\n                        <DetailRow>\n                          <Genres>\n                            <span>Genre :</span>\n                            {DetailData?.genres?.map((genre, idx) => {\n                              if (idx < 4) {\n                                return <Genre>{genre.name}</Genre>;\n                              }\n                            })}\n                          </Genres>\n\n                          <Release>\n                            <span>Last aired</span>\n                            <span>{DetailData?.last_air_date}</span>\n                          </Release>\n                        </DetailRow>\n                        <DetailRow>\n                          <Rate>\n                            Rate : {DetailData?.vote_average} / 10 ({\" \"}\n                            {DetailData?.vote_count} ){\" \"}\n                          </Rate>\n                          <Homepage>\n                            <a href={DetailData?.homepage}>\n                              {DetailData?.homepage}\n                            </a>\n                          </Homepage>\n                        </DetailRow>\n                      </Description>\n                    </>\n                  </BigMovie>\n                </>\n              ) : null}\n            </AnimatePresence>\n          )}\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Home;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tv\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/tv\">\n          <Tv />\n        </Route>\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2F2F2F\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}